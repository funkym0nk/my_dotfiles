set -g default-terminal "xterm-256color"
set -ag terminal-overrides ",*256col*:Tc"
set -as terminal-overrides ",gnome*:RGB"
set -g set-clipboard off
set -g mouse on
set -g xterm-keys on
set -g mode-keys vi
set -g history-limit 50000
set -s escape-time 0
set -g set-titles on
set -g allow-rename on
set -g renumber-windows on
set -g display-panes-time 1000
set -g display-time 1000
set -g repeat-time 1000
set -g monitor-activity on
set -g visual-bell off
set -g visual-activity off
set -g base-index 1
set -g history-file ~/.tmux_history
set -g focus-events on
set -g aggressive-resize on
set -g automatic-rename off
set -g clock-mode-style 24
set -g pane-base-index 1
set -g word-separators ' ,;:"()[]<>$‘’*^='
set -ag word-separators "'"
set -g wrap-search off
set -g prefix C-b
# select/scroll color
set -g mode-style "bg=yellow,fg=black,bold"
# statusbar
set -g status on
set -g status-justify centre
set -g status-interval 5
set -g status-left-length 200
set -g status-right-length 200
set -g status-keys vi
set -g status-position top
#set -g status-style "fg=default,nobold"
set -g status-bg black
set -g status-fg brightblue
set -g status-left " #[fg=brightred,bold]#S  "
set -ag status-left "#{online_status}$USER@#{host_short}  "
set -g status-right "  #[fg=default,bold]#{battery_icon} #{battery_percentage}  "
set -ag status-right "#[fg=yellow]%a %d %b %G %H:%M "
# windows status
set -g window-status-separator '|'
set -g window-status-style "fg=default,nobold"
set -g window-status-format "\
#{?pane_synchronized,#[fg=magenta],\
#{?pane_input_off,#[fg=red],\
#{?pane_pipe,#[fg=green],\
#{?pane_in_mode,#[fg=yellow],\
#{?window_zoomed_flag,#[fg=cyan],\
#{?alternate_on,#[fg=blue],}}}}}}"
set -ag window-status-format ' #(bash ~/.tmux/bin/tmux_echo_padded_window_name "#I:#W") '
set -g window-status-activity-style "fg=default,bold" 
# active window status
set -g window-status-current-style "bg=brightblue,bold fg=black,bold"
set -g window-status-current-format "\
#{?client_prefix,#[fg=default]#[bg=black],\
#{?pane_synchronized,#[bg=magenta],\
#{?pane_input_off,#[bg=red],\
#{?pane_pipe,#[bg=green],\
#{?pane_in_mode,#[bg=yellow],\
#{?window_zoomed_flag,#[bg=cyan],\
#{?alternate_on,#[bg=blue],}}}}}}}"
set -ag window-status-current-format ' #(bash ~/.tmux/bin/tmux_echo_padded_window_name "#I:#W") '
# pane border
set -g pane-border-status bottom
set -g pane-border-style "fg=black"
set -g pane-active-border-style "fg=default,dim"
set -g pane-border-format " #[fg=default]#{?pane_active,#[fg=white],#[fg=default]}#P"
set -ag pane-border-format "#[fg=default]:#{?pane_active,#[fg=white],#[fg=default]}#D"
set -ag pane-border-format "#[fg=default]:#{?pane_active,#[fg=white],#[fg=default]}#{s|/dev/||:pane_tty}"
set -ag pane-border-format "#[fg=default]:#{?pane_active,#[fg=white],#[fg=default]}#{pane_pid}"
set -ag pane-border-format "#[fg=default]:#{?pane_active,#[fg=white],#[fg=default]}#{pane_current_command}"
set -ag pane-border-format "#[fg=default] ["
set -ag pane-border-format "#{?pane_active,#[fg=white],#[fg=default]}"
set -ag pane-border-format "#{?selection_present,#{?rectangle_toggle,blk,sel},#{?pane_in_mode,cp,#{?pane_input_off,ro,w}}}"
set -ag pane-border-format "#{?pane_in_mode,#{?scroll_position,#[fg=default]:#{?pane_active,#[fg=white],#[fg=default]}#{scroll_position},},}"
set -ag pane-border-format "#{?alternate_on,#[fg=default]:#{?pane_active,#[fg=white],#[fg=default]}alt,}"
set -ag pane-border-format "#{?pane_synchronized,#[fg=default]:#{?pane_active,#[fg=white],#[fg=default]}sync,}"
set -ag pane-border-format "#{?pane_pipe,#[fg=default]:#{?pane_active,#[fg=white],#[fg=default]}pipe,}"
set -ag pane-border-format "#{?window_zoomed_flag,#[fg=default]:#{?pane_active,#[fg=white],#[fg=default]}zoom,}"
set -ag pane-border-format "#[fg=default]] "
# message text
set -g message-style "fg=white bg=black"
# pane number display
set -g display-panes-active-colour blue
set -g display-panes-colour green
# clock
set -g clock-mode-colour yellow

# windows
bind -n C-M-t new-window -c '~/'
bind -n C-M-y command-prompt -ip 'Window name:' "rename-window \"%%%\""
bind -n C-M-w confirm-before -p 'Kill pane #P? (y/n)' "kill-pane"
bind -n C-M-r confirm-before -p 'Respawn pane #P? (y/n)' "respawn-pane -k"
bind -n C-M-PageUp previous-window
bind -n C-M-PageDown next-window
bind -n C-M-S-PageUp swap-window -d -t -1
bind -n C-M-S-PageDown swap-window -d -t +1
bind -n C-M-z setw synchronize-panes \; if -F '#{pane_synchronized}' \
    'display-message "Pane sync on"' 'display-message "Pane sync off"'
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
# panes
bind -n C-M-Left select-pane -L
bind -n C-M-Right select-pane -R
bind -n C-M-Up select-pane -U
bind -n C-M-Down select-pane -D
bind -n C-M-m resize-pane -Z
bind -n C-M-Home if -F '#{window_zoomed_flag}' 'select-pane -t :.- ; resize-pane -Z' 'resize-pane -Z'
bind -n C-M-End if -F '#{window_zoomed_flag}' 'select-pane -t :.+ ; resize-pane -Z' 'resize-pane -Z'
bind -n C-M-j split-window -c "#{pane_current_path}" -h
bind -n C-M-k split-window -c "#{pane_current_path}" -v
bind -n C-M-h run "tmux send-keys -t #{pane_id} C-r"
# misc
bind -n C-M-f copy-mode \; command-prompt -ip 'Search up:' "send -X search-backward-incremental \"%%%\""
bind -n C-M-g copy-mode \; command-prompt -ip 'Search down:' "send -X search-forward-incremental \"%%%\""
bind -n C-M-Space run "tmux send-keys -t #{pane_id} '``' Tab"
bind -n C-M-n run "tmux split-window -c \"#{pane_current_path}\" -v -l 20 \
    \"~/.tmux/plugins/extrakto/scripts/tmux-extrakto.sh #{pane_id}\""
bind -n C-M-b command-prompt -p 'Command to broadcast:' \
    "run \"tmux list-panes -a -F '##{session_name}:##{window_index}.##{pane_index}' \
    | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""
bind -n C-M-o run '~/.tmux/plugins/tmux-fpp/fpp.tmux start edit'
bind -n C-M-q confirm-before -p 'Toggle logging #P? (y/n)' \
    "run '~/.tmux/plugins/tmux-logging/scripts/toggle_logging.sh'"
bind -n C-m-x confirm-before -p 'Screen capture pane #P? (y/n)' \
    "run '~/.tmux/plugins/tmux-logging/scripts/screen_capture.sh'"
bind -n C-M-s confirm-before -p 'Save history pane #P? (y/n)' \
    "run '~/.tmux/plugins/tmux-logging/scripts/save_complete_history.sh'"
bind -n C-M-l confirm-before -p 'Clear history pane #P? (y/n)' "clear-history"
bind -n C-M-l confirm-before -p 'Clear history pane #P? (y/n)' "clear-history"
bind -n C-M-i if -F '#{pane_input_off}' 'select-pane -e; display-message "Pane read-only off"' \
    'select-pane -d; display-message "Pane read-only on"'
# keyboard copy and scrolling (normal mode)
bind -n C-M-v copy-mode \; send -X begin-selection
bind -n C-M-p run "tmux set-buffer \"$(xclip -o -selection primary)\"; tmux paste-buffer >/dev/null"
bind -n S-Left if -F '#{alternate_on}' 'send S-Left' 'copy-mode; send -X begin-selection; send -X cursor-left'
bind -n S-Right if -F '#{alternate_on}' 'send S-Right' 'copy-mode; send -X begin-selection; send -X cursor-right'
bind -n S-Up if -F '#{alternate_on}' 'send S-Up' 'copy-mode; send -X begin-selection; send -X cursor-up'
bind -n S-Down if -F '#{alternate_on}' 'send S-Down' 'copy-mode; send -X begin-selection; send -X cursor-down'
bind -n S-PageUp if -F '#{alternate_on}' 'send S-PageUp' 'copy-mode; send -X begin-selection; send -X page-up'
bind -n S-PageDown if -F '#{alternate_on}' 'send S-PageDown' 'copy-mode; send -X begin-selection; send -X page-down'
bind -n S-Home if -F '#{alternate_on}' 'send S-Home' 'copy-mode; send -X begin-selection; send -X start-of-line'
bind -n S-End if -F '#{alternate_on}' 'send S-End' 'copy-mode; send -X begin-selection; send -X end-of-line'
bind -n C-Up if -F '#{alternate_on}' 'send C-Up' 'copy-mode; send -X cursor-up'
bind -n C-Down if -F '#{alternate_on}' 'send C-Down' 'copy-mode; send -X cursor-down'
bind -n C-PageUp if -F '#{alternate_on}' 'send C-PageUp' 'copy-mode; send -X halfpage-up'
bind -n C-PageDown if -F '#{alternate_on}' 'send C-PageDown' 'copy-mode; send -X halfpage-down'
bind -n C-Home if -F '#{alternate_on}' 'send C-Home' 'copy-mode; send -X history-top; send -X start-of-line'
bind -n C-End if -F '#{alternate_on}' 'send C-End' 'copy-mode; send -X history-bottom; send -X end-of-line'
bind -n C-S-Left if -F '#{alternate_on}' 'send C-S-Left' 'copy-mode; send -X begin-selection; send -X previous-word'
bind -n C-S-Right if -F '#{alternate_on}' 'send C-S-Right' 'copy-mode; send -X begin-selection send -X next-word'
bind -n C-S-Up if -F '#{alternate_on}' 'send C-S-Up' 'copy-mode; send -X begin-selection; send -X cursor-up'
bind -n C-S-Down if -F '#{alternate_on}' 'send C-S-Down' 'copy-mode; send -X begin-selection; send -X cursor-down'
bind -n C-S-PageUp if -F '#{alternate_on}' 'send C-S-PageUp' 'copy-mode; send -X begin-selection; send -X halfpage-up'
bind -n C-S-PageDown if -F '#{alternate_on}' 'send C-S-PageDown' 'copy-mode; send -X begin-selection; send -X halfpage-down'
bind -n C-S-Home if -F '#{alternate_on}' 'send C-S-Home' 'copy-mode; send -X begin-selection; \
    send -X history-top; send -X start-of-line'
bind -n C-S-End if -F '#{alternate_on}' 'send C-S-End' 'copy-mode; send -X begin-selection; \
    send -X history-bottom; send -X end-of-line'
bind -n M-Left if -F '#{alternate_on}' 'send M-Left' 'copy-mode; send -X previous-word'
bind -n M-Right if -F '#{alternate_on}' 'send M-Right' 'copy-mode; send -X next-word'
bind -n M-Up if -F '#{alternate_on}' 'send M-Up' 'copy-mode; send -X -N 3 scroll-up'
bind -n M-Down if -F '#{alternate_on}' 'send M-Down' 'copy-mode; send -X -N 3 scroll-down'
bind -n M-PageUp if -F '#{alternate_on}' 'send M-PageUp' 'copy-mode; send -X halfpage-up'
bind -n M-PageDown if -F '#{alternate_on}' 'send M-PageDown' 'copy-mode; send -X halfpage-down'
bind -n M-Home if -F '#{alternate_on}' 'send M-Home' 'copy-mode; send -X history-top; send -X start-of-line'
bind -n M-End if -F '#{alternate_on}' 'send M-End' 'copy-mode; send -X history-bottom; send -X end-of-line'
# keyboard copy and scrolling (copy mode)
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi C-M-v send -X cancel
bind -T copy-mode-vi C-M-p if -F '#{selection_present}' '' 'send -X cancel; \
    run "tmux set-buffer \"$(xclip -o -selection primary)\"; tmux paste-buffer >/dev/null"'
bind -T copy-mode-vi / command-prompt -ip 'Search up:' "send -X search-backward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -ip 'Search down:' "send -X search-forward-incremental \"%%%\""
bind -T copy-mode-vi f send -X copy-selection \; \
    run "tmux save-buffer - | xclip -i -selection primary >/dev/null" \; \
    run "tmux send -X search-backward \"$(xclip -o -selection primary)\""
bind -T copy-mode-vi F send -X copy-selection \; \
    run "tmux save-buffer - | xclip -i -selection primary >/dev/null" \; \
    run "tmux send -X search-forward \"$(xclip -o -selection primary)\""
bind -T copy-mode-vi v if -F '#{selection_present}' 'send -X clear-selection' 'send -X begin-selection'
bind -T copy-mode-vi w if -F '#{selection_present}' 'send -X next-word-end' 'send -X cursor-right; \
    send -X previous-word; send -X begin-selection; send -X next-word-end'
bind -T copy-mode-vi W if -F '#{selection_present}' 'send -X previous-word' 'send -X cursor-left; \
    send -X next-word-end; send -X previous-word-end; send -X begin-selection; send -X previous-word'
bind -T copy-mode-vi y if -F '#{selection_present}' 'send -X copy-selection; \
    run "tmux save-buffer - | xclip -i -selection primary >/dev/null"'
bind -T copy-mode-vi Y send -X start-of-line \; send -X begin-selection \; \
    send -X end-of-line \; send -X copy-selection \; \
    run "tmux save-buffer - | xclip -i -selection primary >/dev/null" \; \
    display-message "Line yanked"
bind -T copy-mode-vi p if -F '#{selection_present}' '' 'send -X cancel; \
    run "tmux set-buffer \"$(xclip -o -selection primary)\"; tmux paste-buffer >/dev/null"'
bind -T copy-mode-vi '*' send -X cursor-right \; send -X select-word \; send -X copy-selection \; \
    run "tmux save-buffer - | xclip -i -selection primary >/dev/null" \; \
    run "tmux send -X search-backward \"$(xclip -o -selection primary)\"" \; \
    send -X search-again
bind -T copy-mode-vi '#' send -X cursor-right \; send -X select-word \; send -X copy-selection \; \
    run "tmux save-buffer - | xclip -i -selection primary >/dev/null" \; \
    run "tmux send -X search-forward \"$(xclip -o -selection primary)\"" \; \
    send -X search-again
bind -T copy-mode-vi Escape if -F '#{selection_present}' 'send -X clear-selection' 'send -X cancel'
bind -T copy-mode-vi Home send -X start-of-line
bind -T copy-mode-vi End send -X end-of-line
bind -T copy-mode-vi S-Up if -F '#{selection_present}' 'send -X cursor-up' \
    'send -X begin-selection; send -X cursor-up'
bind -T copy-mode-vi S-Down if -F '#{selection_present}' 'send -X cursor-down' \
    'send -X begin-selection; send -X cursor-down'
bind -T copy-mode-vi S-Left if -F '#{selection_present}' 'send -X cursor-left' \
    'send -X begin-selection; send -X cursor-left'
bind -T copy-mode-vi S-Right if -F '#{selection_present}' 'send -X cursor-right' \
    'send -X begin-selection; send -X cursor-right'
bind -T copy-mode-vi S-PageUp if -F '#{selection_present}' 'send -X page-up' \
    'send -X begin-selection; send -X page-up'
bind -T copy-mode-vi S-PageDown if -F '#{selection_present}' 'send -X page-down' \
    'send -X begin-selection; send -X page-down'
bind -T copy-mode-vi S-Home if -F '#{selection_present}' 'send -X start-of-line' \
    'send -X begin-selection; send -X start-of-line'
bind -T copy-mode-vi S-End if -F '#{selection_present}' 'send -X end-of-line' \
    'send -X begin-selection; send -X end-of-line'
bind -T copy-mode-vi C-Up send -X scroll-up
bind -T copy-mode-vi C-Down send -X scroll-down
bind -T copy-mode-vi C-Left send -X previous-word
bind -T copy-mode-vi C-Right send -X next-word
bind -T copy-mode-vi C-PageUp send -X halfpage-up
bind -T copy-mode-vi C-PageDown send -X halfpage-down
bind -T copy-mode-vi C-Home send -X history-top \; send -X start-of-line
bind -T copy-mode-vi C-End send -X history-bottom \; send -X end-of-line
bind -T copy-mode-vi M-Up send -X -N 3 scroll-up
bind -T copy-mode-vi M-Down send -X -N 3 scroll-down
bind -T copy-mode-vi M-Left send -X previous-word
bind -T copy-mode-vi M-Right send -X next-word
bind -T copy-mode-vi M-PageUp send -X halfpage-up
bind -T copy-mode-vi M-PageDown send -X halfpage-down
bind -T copy-mode-vi M-Home send -X history-top \; send -X start-of-line
bind -T copy-mode-vi M-End send -X history-bottom \; send -X end-of-line
bind -T copy-mode-vi C-S-Up if -F '#{selection_present}' 'send -X scroll-up' \
    'send -X begin-selection; send -X scroll-up'
bind -T copy-mode-vi C-S-Down if -F '#{selection_present}' 'send -X scroll-down' \
    'send -X begin-selection; send -X scroll-down'
bind -T copy-mode-vi C-S-Left if -F '#{selection_present}' 'send -X previous-word' \
    'send -X begin-selection; send -X previous-word'
bind -T copy-mode-vi C-S-Right if -F '#{selection_present}' 'send -X next-word' \
    'send -X begin-selection; send -X next-word'
bind -T copy-mode-vi C-S-PageUp if -F '#{selection_present}' 'send -X halfpage-up' \
    'send -X begin-selection; send -X halfpage-up'
bind -T copy-mode-vi C-S-PageDown if -F '#{selection_present}' 'send -X halfpage-down' \
    'send -X begin-selection; send -X halfpage-down'
bind -T copy-mode-vi C-S-Home if -F '#{selection_present}' 'send -X history-top; send -X start-of-line' \
    'send -X begin-selection; send -X history-top; send -X start-of-line'
bind -T copy-mode-vi C-S-End if -F '#{selection_present}' 'send -X history-bottom; send -X end-of-line' \
    'send -X begin-selection; send -X history-bottom; send -X end-of-line'
# mouse drag
bind -n MouseDragEnd1Pane select-pane \; if -Ft{mouse_any_flag} '#{alternate_on}' \
    'send -M' "copy-mode -e -t= ; send -X copy-pipe-no-clear \"xclip -i -selection primary\"; \
    run \"tmux save-buffer - | xclip -i -selection primary >/dev/null\""
bind -T copy-mode-vi MouseDragEnd1Pane select-pane \; \
    send -X copy-pipe-no-clear "xclip -i -selection primary" \; \
    run "tmux save-buffer - | xclip -i -selection primary >/dev/null" \; \
# mouse left click
bind -T copy-mode-vi MouseDown1Pane select-pane \; send -X stop-selection \; \
    send -X copy-pipe-no-clear "xclip -i -selection primary" \; \
    run "tmux save-buffer - | xclip -i -selection primary >/dev/null" \; send -X clear-selection
bind -n C-MouseDown1Pane copy-mode -e \; send -X select-pane -t=
# mouse middle click
bind -n MouseDown2Pane select-pane \; \
    run "tmux set-buffer \"$(xclip -o -selection primary)\"; tmux paste-buffer >/dev/null"
bind -T copy-mode-vi MouseDown2Pane select-pane \; send -X cancel \; \
    run "tmux save-buffer - | xclip -i -selection primary >/dev/null" \; \
    run "tmux set-buffer \"$(xclip -o -selection primary)\"; tmux paste-buffer >/dev/null"
# mouse double click
bind -n DoubleClick1Pane select-pane \; if -Ft{mouse_any_flag} '#{alternate_on}' \
    'send -M' "copy-mode -e -t= ; send -X select-word; send -X stop-selection; \
    send -X copy-pipe-no-clear \"xclip -i -selection primary\"; \
    run \"tmux save-buffer - | xclip -i -selection primary >/dev/null\""
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send -X select-word \; send -X stop-selection \; \
    send -X copy-pipe-no-clear "xclip -i -selection primary" \; \
    run "tmux save-buffer - | xclip -i -selection primary >/dev/null"
# mouse triple click
bind -n TripleClick1Pane select-pane \; if -Ft{mouse_any_flag} '#{alternate_on}' 'send -M' \
    "copy-mode -e -t= ; send -X select-line; send -X stop-selection; \
     send -X copy-pipe-no-clear \"xclip -i -selection primary\"; \
     run \"tmux save-buffer - | xclip -i -selection primary >/dev/null\""
bind -T copy-mode-vi TripleClick1Pane select-pane \; send -X select-line \; send -X stop-selection \; \
    send -X copy-pipe-no-clear "xclip -i -selection primary" \; \
    run "tmux save-buffer - | xclip -i -selection primary >/dev/null"
# mouse scrolling
bind -n WheelUpPane select-pane \; if -Ft= '#{mouse_any_flag}' 'send -M' "if -Ft= '#{alternate_on}' \
    'send -t= Up; send -t= Up; send -t= Up' \"select-pane -t= ; if -Ft= '#{pane_in_mode}' \
    'send -X stop-selection; send -M; send -M; send -M' \
    'copy-mode -e; send -X stop-selection; send -M; send -M; send -M'\""
bind -n WheelDownPane select-pane \; if -Ft= '#{mouse_any_flag}' 'send -M' "if -Ft= '#{alternate_on}' \
    'send -t= Down; send -t= Down; send -t= Down' 'select-pane -t= ; send -M; send -M; send -M'"
bind -n C-WheelUpPane select-pane \; if -Ft= '#{mouse_any_flag}' 'send -M' "if -Ft= '#{alternate_on}' \
    'send -t= Up' \"select-pane -t= ; if -Ft= '#{pane_in_mode}' \
    'send -X stop-selection; send -M' 'copy-mode -e; send -X stop-selection; send -M'\""
bind -n C-WheelDownPane select-pane \; if -Ft= '#{mouse_any_flag}' 'send -M' "if -Ft= '#{alternate_on}' \
    'send -t= Down' 'select-pane -t= ; send -M'"
bind -n S-WheelUpPane select-pane \; if -Ft= '#{mouse_any_flag}' 'send -M' "if -Ft= '#{alternate_on}' \
    'send -t= PageUp' \"select-pane -t= ; if -Ft= '#{pane_in_mode}' \
    'send -X stop-selection; send -M PageUp' 'copy-mode -eu; send -X stop-selection; send -M PageUp'\""
bind -n S-WheelDownPane select-pane \; if -Ft= '#{mouse_any_flag}' 'send -M' "if -Ft= '#{alternate_on}' \
    'send -t= PageDown' 'select-pane -t= ; send -M PageDown'"
bind -T copy-mode-vi WheelUpPane select-pane \; send -X stop-selection \; send -X -N 3 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send -X stop-selection \; send -X -N 3 scroll-down
bind -T copy-mode-vi S-WheelUpPane select-pane \; send -X stop-selection \; send -X halfpage-up
bind -T copy-mode-vi S-WheelDownPane select-pane \; send -X stop-selection \; send -X halfpage-down
bind -T copy-mode-vi C-WheelUpPane select-pane \; send -X stop-selection \; send -X -N 1 scroll-up
bind -T copy-mode-vi C-WheelDownPane select-pane \; send -X stop-selection \; send -X -N 1 scroll-down

# plugins
set -g @shell_mode 'vi'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'laktak/extrakto'
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# plugin options
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-dir '~/.tmux-res-dir'
set -g @resurrect-save-bash-history 'off'
set -g @resurrect-save-shell-history 'off'
set -g @resurrect-capture-pane-contents 'off'
set -g @resurrect-hook-post-save-all 'eval $(xdotool getwindowgeometry --shell $WINDOWID); echo 0,$X,$Y,$WIDTH,$HEIGHT > $HOME/.tmux/resurrect/geometry'
set -g @resurrect-hook-pre-restore-all 'wmctrl -i -r $WINDOWID -e $(cat $HOME/.tmux/resurrect/geometry)'
set -g @continuum-save-interval '180'
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @online_icon '#[fg=green]'
set -g @offline_icon '#[fg=red]'
set -g @extrakto_key ''
set -g @extrakto_default_opt 'word'
set -g @extrakto_clip_tool 'xclip -i -selection primary >/dev/null'
set -g @extrakto_open_tool 'vim'
set -g @fpp-bind off
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_show_sync_mode 'on'

# keep this line at the very bottom of tmux.conf
run -b '~/.tmux/plugins/tpm/tpm'

